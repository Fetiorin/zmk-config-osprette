/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define CMK 0
#define SYM 1
#define NUM 2
#define NAV 3
#define FUN 4
#define DAN 5
#define LCK 6

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
    };
};

/*           34 Keys
╭──────────────╮ ╭──────────────╮
│ 0  1  2  3  4│ │ 5  6  7  8  9│
│10 11 12 13 14│ │15 16 17 18 19│
│20 21 22 23 24│ │25 26 27 28 29│
╰────────╮30 31│ │32 33╭────────╯
         ╰─────╯ ╰─────╯         */

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <13 14>;
        };

        ukr_h {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <6 16>;
        };

        ukr_yi {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 17>;
        };

        ukr_back {
            bindings = <&kp BACKSLASH>;
            key-positions = <17 28>;
        };

        ukr_grave {
            bindings = <&kp GRAVE>;
            key-positions = <0 10>;
        };

        ukr_alt_g {
            bindings = <&kp S>;
            key-positions = <1 11>;
        };

        repeat {
            bindings = <&key_repeat>;
            key-positions = <3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            // -----------------------------------------------------------------
            // |     |     |  W  |  F  |  P  |  B  | |  J  |  L  |  U  |  Y  |     |     |
            // |  Q  |  A  |  R  |  S  |  T  |  G  | |  M  |  N  |  E  |  I  |  O  |     |
            // |     |  Z  |  X  |  C  |  D  |  V  | |  K  |  H  |  ,  |  .  |-FUN-|     |
            //                         |-SYM-| SPC | | RET |-NUM-|

            bindings = <
                  &kp W   &kp E   &kp R      &kp T                   &kp Y   &kp U      &kp I    &kp O
  &kp Q   &kp A   &kp S   &kp D   &kp F      &kp G                   &kp H   &kp J      &kp K    &kp L  &kp SEMICOLON   &kp P
          &kp Z   &kp X   &kp C   &kp V      &kp B                   &kp N   &kp M  &kp COMMA  &kp DOT      &kp SLASH
                                  &sl 1  &kp SPACE          &sk LEFT_SHIFT   &sl 2
            >;
        };

        symbol_layer {
            // -----------------------------------------------------------------
            // |     |     |  \  |  %  |  $  |     | |     |  ^  |  {  |  }  |     |     |
            // |     |  *  |  (  |  )  |  :  |     | |     |  "  |  [  |  ]  |  ;  |     |
            // |     |     |  `  |  @  |  &  |     | |     |  #  |  <  |  >  |-FUN-|     |
            //                         |_SYM_| SPC | | RET | ESC |

            bindings = <
                                    &none         &none             &none          &none                   &none     &none   &none      &none
 &kp ESCAPE  &sk LEFT_SHIFT  &sk LEFT_GUI  &sk LEFT_ALT  &sk LEFT_CONTROL  &sk RIGHT_ALT          &kp LEFT_ARROW  &kp DOWN  &kp UP  &kp RIGHT  &kp BACKSPACE  &kp DELETE
                      &none         &none         &none             &none          &none                   &none     &none   &none      &none      &kp ENTER
                                                                   &trans         &trans                  &trans     &mo 3
            >;
        };

        number_layer {
            // -----------------------------------------------------------------
            // |     |     |  4  |  5  |  6  |     | |     |  |  |  -  |  /  |     |     |
            // |     |  .  |  1  |  2  |  3  |     | |     |  '  |  _  |  =  |-NAV-|     |
            // |     |  ~  |  7  |  8  |  9  |     | |     |  +  |  ?  |  !  |     |     |
            //                         |  0  | SPC | | RET |_NUM_|

            bindings = <
                                    &kp MINUS               &kp PLUS     &kp BACKSLASH         &kp DOLLAR          &kp PERCENT         &kp CARET  &kp AMPERSAND  &kp ASTERISK
 &kp GRAVE    &kp TILDE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET             &kp EXCL  &sk LEFT_CONTROL   &sk LEFT_ALT  &sk LEFT_GUI  &sk LEFT_SHIFT  &kp SINGLE_QUOTE
            &kp AT_SIGN         &kp LESS_THAN       &kp GREATER_THAN    &kp LEFT_BRACE    &kp RIGHT_BRACE            &kp POUND    &kp UNDERSCORE       &kp PIPE         &none           &none
                                                                                 &mo 3             &trans               &trans             &none
            >;
        };

        nav_layer {
            // -----------------------------------------------------------------
            // |     |     |     |     |     |     | |     |     |     |     |     |     |
            // |     |     |     |     |     |     | | LFT | DWN | U P |RIGHT|_NAV_|     |
            // |     |     |     |     |     |     | | HOM |PG_DN|PG_UP| END |     |     |
            //                         |     | SPC | | RET |_NUM_|

            bindings = <
                 &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9         &none           &none   &none   &none   &none
  &none   &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0           &none   &none   &none   &none   &none   &none
          &none  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6         &none           &none   &none   &none   &none   &none
                                                   &trans        &trans          &trans  &trans
            >;
        };

        fun_layer {
            // -----------------------------------------------------------------
            // |     |     | F 6 | F 5 | F 4 | F10 | | <!> | <!> | <!> | <!> |     |     |
            // |     |CAPSL| F 3 | F 2 | F 1 | F11 | | BT2 |VMUTE|VOLDN|VOLUP| <!> |     |
            // |     |-!!!-| F 9 | F 8 | F 7 | F12 | | BT0 | BT1 |BRIDN|BRIUP|_FUN_|     |
            //                   |     | SPC | | RET |     |

            bindings = <
                   &kp F6  &kp F5  &kp F4  &kp F10                 &none         &none         &none         &none
  &none  &kp CAPS  &kp F3  &kp F2  &kp F1  &kp F11          &bt BT_SEL 2    &kp K_MUTE  &kp C_VOL_DN  &kp C_VOL_UP   &none   &none
            &mo 5  &kp F9  &kp F8  &kp F7  &kp F12          &bt BT_SEL 0  &bt BT_SEL 1  &kp C_BRI_DN  &kp C_BRI_UP  &trans
                                    &none   &trans                &trans         &none
            >;
        };

        danger_layer {
            // -----------------------------------------------------------------
            // |     |     |     |     |     |     | |BTCLR| BLE | USB |RESET|     |     |
            // |     |     |     |     |     |     | |     |     |     |     |BOOTL|     |
            // |     |_!!!_|     |     |     |     | |     |     |     |     |_FUN_|     |
            //                   |     |     | |     |     |
            // impactful buttons
            // Bluetooth clear, reset, chaning BLE/USB preference, bootloader

            bindings = <
                  &none   &none   &none   &none          &bt BT_CLR  &out OUT_BLE  &out OUT_USB  &reset
  &none   &none   &none   &none   &none   &none               &none         &none         &none   &none  &bootloader   &none
         &trans   &none   &none   &none   &none               &none         &none         &none   &none       &trans
                                  &none   &none               &none         &none
            >;
        };
    };
};
